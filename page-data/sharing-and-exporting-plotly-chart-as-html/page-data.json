{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/sharing-and-exporting-plotly-chart-as-html","result":{"data":{"post":{"__typename":"MdxPost","slug":"/sharing-and-exporting-plotly-chart-as-html","title":"Sharing and Exporting Plotly Chart as HTML","date":"12.11.2020","tags":[{"name":"Analytics","slug":"analytics"},{"name":"Python","slug":"python"}],"description":"How to keep plotly chart interactive when sharing to others","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sharing and Exporting Plotly Chart as HTML\",\n  \"date\": \"2020-11-12T00:00:00.000Z\",\n  \"description\": \"How to keep plotly chart interactive when sharing to others\",\n  \"tags\": [\"Analytics\", \"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I like using Plotly (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://plotly.com/python/plotly-express/\"\n  }), \"plotly express\"), \") in my Jupyter Notebook because I don't need to take care of axis formatting to be able to read the chart properly. Plotly takes care of it and I can also hover  through the chart to see the values. It's just amazing.\"), mdx(\"p\", null, \"But I always had a problem when I wanted to share the chart to others. I used to import the chart as a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \".png\"), \" file. It will still look nice, but the chart will no longer be interactive as it will be converted into an image.\"), mdx(\"p\", null, \"Recently a colleague asked about how to embed plotly chart in a dropbox paper. I guess normally we would then generate the iframe for the chart and then embed it. But I don't think dropbox paper support embedding iframe. Then an idea popped in my mind to just export the chart as html and attach that html file. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"fig = # your plotly chart\\nfig.write_html('chartname.html')\\n\")), mdx(\"p\", null, \"Voila! That's how I imported my first plotly html lol. \"), mdx(\"p\", null, \"Why is this a good option to share a plotly chart?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You maintain the interactivity of the chart (you can hover through and see the values!)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anyone with a browser can easily open an html file. No need for any technical knowledge or extra tools installation!\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I like using Plotly ( plotly express ) in my Jupyter Notebook because I don't need to take care of axis formatting to be able to read theâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/sharing-and-exporting-plotly-chart-as-html","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}